[DATASET]
dataset_package = decentralizepy.datasets.Femnist
dataset_class = Femnist
model_class = CNN
train_dir = /datasets/Femnist/femnist/per_user_data/per_user_data/train
test_dir = /datasets/Femnist/femnist/data/test/test
; python list of fractions below
; sizes = [0.0078125,0.0078125,0.0078125,0.0078125]
sizes =
random_seed = 90
test_batch_size=64

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.05

[NODE]
graph_degree = 6

[TRAIN_PARAMS]
training_package = decentralizepy.training.Training
training_class = Training

rounds = 3
full_epochs = False
batch_size = 64
shuffle = True
loss_package = torch.nn
loss_class = CrossEntropyLoss


[SHARING]
sharing_package = decentralizepy.sharing.SharingAsymmetric
sharing_class = SharingAsymmetric

;weighting_method should be one of "METRO" or "AMNESIA" for now, by default it is "METRO"
; weighting_method=AMNESIA

#TODO: Ensure this is divisible by "train_evaluate_after"...
save_models_for_attacks = 500

# This section must be at the end since the script may add an offset to it
[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = /ip.json